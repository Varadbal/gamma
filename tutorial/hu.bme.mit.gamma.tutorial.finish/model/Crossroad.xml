<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'>
<nta>
<declaration>


broadcast chan finalize;

bool isStable = true;

bool toRaise_Control_toggleOfprior;

bool isRaised_Control_toggleOfprior;

bool toRaise_Control_toggleOfsecondary;

bool isRaised_Control_toggleOfsecondary;

bool toRaise_PoliceInterrupt_policeOfsecondary;

bool isRaised_PoliceInterrupt_policeOfsecondary;

bool toRaise_PoliceInterrupt_policeOfcontroller;

bool isRaised_PoliceInterrupt_policeOfcontroller;

bool toRaise_PoliceInterrupt_policeOfprior;

bool isRaised_PoliceInterrupt_policeOfprior;

bool LightCommands_displayYellowOfprior;

bool LightCommands_displayRedOfprior;

bool LightCommands_displayNoneOfsecondary;

bool LightCommands_displayGreenOfprior;

bool LightCommands_displayNoneOfprior;

bool LightCommands_displayRedOfsecondary;

bool LightCommands_displayGreenOfsecondary;

bool LightCommands_displayYellowOfsecondary;

broadcast chan runCycleOperatingOfOperatingOfcontroller;

broadcast chan runCycleNormalOfNormalOfprior;

broadcast chan runCycleMain_regionOfStatechartOfprior;

broadcast chan runCycleMain_regionOfStatechartOfsecondary;

broadcast chan runCycleInterruptedOfInterruptedOfsecondary;

broadcast chan runCycleNormalOfNormalOfsecondary;

broadcast chan runCycleMain_regionOfStatechartOfcontroller;

broadcast chan runCycleInterruptedOfInterruptedOfprior;

broadcast chan entryChanOfInterrupted31;

broadcast chan entryChanOfNormal32;

broadcast chan entryChanOfOperating33;

broadcast chan entryChanOfInterrupted34;

broadcast chan entryChanOfNormal35;

broadcast chan exitChanOfInterrupted36;

broadcast chan exitChanOfNormal38;

broadcast chan exitChanOfOperating40;

broadcast chan exitChanOfInterrupted42;

broadcast chan exitChanOfNormal44;

void clearOutEvents64() {
	LightCommands_displayRedOfprior = false;
	LightCommands_displayYellowOfprior = false;
	LightCommands_displayYellowOfsecondary = false;
	LightCommands_displayNoneOfsecondary = false;
	LightCommands_displayGreenOfsecondary = false;
	LightCommands_displayNoneOfprior = false;
	LightCommands_displayRedOfsecondary = false;
	LightCommands_displayGreenOfprior = false;
}

bool noInnerEvents() {
	bool tempVar0;
	bool tempVar1;
	bool tempVar2;
	bool tempVar3;
	bool tempVar4;
	tempVar0 = toRaise_PoliceInterrupt_policeOfprior;
	tempVar1 = (tempVar0 || toRaise_PoliceInterrupt_policeOfsecondary);
	tempVar2 = (tempVar1 || toRaise_Control_toggleOfsecondary);
	tempVar3 = (tempVar2 || toRaise_PoliceInterrupt_policeOfcontroller);
	tempVar4 = (tempVar3 || toRaise_Control_toggleOfprior);
	return !(tempVar4);
}

</declaration>
<template>
<name>
operatingOfOperatingOfcontroller
</name>
<declaration>
bool isActive;

clock timer15;

clock timer17;

clock timer19;

clock timer21;

clock timer29;
</declaration>
<location id="EntryLocation0">
<name>
EntryLocation0
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="GenInitLocation1">
<name>
GenInitLocation1
</name>
<label kind="comments">
Generated for the synchronization of subregions.
</label>
</location>

<location id="Init">
<name>
Init
</name>
<label kind="invariant">
timer17 &lt;= 2 * 1000
</label>
</location>

<location id="entryOfInit">
<name>
entryOfInit
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="PriorityPrepares">
<name>
PriorityPrepares
</name>
<label kind="invariant">
timer15 &lt;= 1 * 1000
</label>
</location>

<location id="entryOfPriorityPrepares">
<name>
entryOfPriorityPrepares
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="Priority">
<name>
Priority
</name>
<label kind="invariant">
timer19 &lt;= 2 * 1000
</label>
</location>

<location id="entryOfPriority">
<name>
entryOfPriority
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="SecondaryPrepares">
<name>
SecondaryPrepares
</name>
<label kind="invariant">
timer29 &lt;= 1 * 1000
</label>
</location>

<location id="entryOfSecondaryPrepares">
<name>
entryOfSecondaryPrepares
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="Secondary">
<name>
Secondary
</name>
<label kind="invariant">
timer21 &lt;= 2 * 1000
</label>
</location>

<location id="entryOfSecondary">
<name>
entryOfSecondary
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="timer16">
<name>
timer16
</name>
</location>

<location id="timer18">
<name>
timer18
</name>
</location>

<location id="timer20">
<name>
timer20
</name>
</location>

<location id="timer22">
<name>
timer22
</name>
</location>

<location id="timer30">
<name>
timer30
</name>
</location>
<init ref="GenInitLocation1"/>

<transition>
<source ref="entryOfInit"/>
<target ref="Init"/>
<label kind="assignment">toRaise_Control_toggleOfprior = true,
timer17 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfPriorityPrepares"/>
<target ref="PriorityPrepares"/>
<label kind="assignment">toRaise_Control_toggleOfprior = true,
timer15 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfPriority"/>
<target ref="Priority"/>
<label kind="assignment">toRaise_Control_toggleOfsecondary = true,
toRaise_Control_toggleOfprior = true,
timer19 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfSecondaryPrepares"/>
<target ref="SecondaryPrepares"/>
<label kind="assignment">toRaise_Control_toggleOfsecondary = true,
timer29 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfSecondary"/>
<target ref="Secondary"/>
<label kind="assignment">toRaise_Control_toggleOfprior = true,
toRaise_Control_toggleOfsecondary = true,
timer21 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="timer16"/>
<target ref="entryOfSecondary"/>
<label kind="guard">isActive</label>
<label kind="synchronisation">runCycleOperatingOfOperatingOfcontroller?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="timer30"/>
<target ref="entryOfPriority"/>
<label kind="guard">isActive</label>
<label kind="synchronisation">runCycleOperatingOfOperatingOfcontroller?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="EntryLocation0"/>
<target ref="entryOfInit"/>
<label kind="guard">isActive</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="timer20"/>
<target ref="entryOfPriorityPrepares"/>
<label kind="guard">isActive</label>
<label kind="synchronisation">runCycleOperatingOfOperatingOfcontroller?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="timer18"/>
<target ref="entryOfPriorityPrepares"/>
<label kind="guard">isActive</label>
<label kind="synchronisation">runCycleOperatingOfOperatingOfcontroller?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="timer22"/>
<target ref="entryOfSecondaryPrepares"/>
<label kind="guard">isActive</label>
<label kind="synchronisation">runCycleOperatingOfOperatingOfcontroller?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="PriorityPrepares"/>
<target ref="timer16"/>
<label kind="guard">(isStable &amp;&amp; timer15 >= 1 * 1000)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Init"/>
<target ref="timer18"/>
<label kind="guard">(isStable &amp;&amp; timer17 >= 2 * 1000)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Priority"/>
<target ref="timer20"/>
<label kind="guard">(isStable &amp;&amp; timer19 >= 2 * 1000)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Secondary"/>
<target ref="timer22"/>
<label kind="guard">(isStable &amp;&amp; timer21 >= 2 * 1000)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="SecondaryPrepares"/>
<target ref="timer30"/>
<label kind="guard">(isStable &amp;&amp; timer29 >= 1 * 1000)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="timer16"/>
<target ref="entryOfPriorityPrepares"/>
<label kind="synchronisation">entryChanOfOperating33?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="SecondaryPrepares"/>
<target ref="entryOfSecondaryPrepares"/>
<label kind="synchronisation">entryChanOfOperating33?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="GenInitLocation1"/>
<target ref="EntryLocation0"/>
<label kind="synchronisation">entryChanOfOperating33?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="timer22"/>
<target ref="entryOfSecondary"/>
<label kind="synchronisation">entryChanOfOperating33?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="timer30"/>
<target ref="entryOfSecondaryPrepares"/>
<label kind="synchronisation">entryChanOfOperating33?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Secondary"/>
<target ref="entryOfSecondary"/>
<label kind="synchronisation">entryChanOfOperating33?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="PriorityPrepares"/>
<target ref="entryOfPriorityPrepares"/>
<label kind="synchronisation">entryChanOfOperating33?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Priority"/>
<target ref="entryOfPriority"/>
<label kind="synchronisation">entryChanOfOperating33?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="timer20"/>
<target ref="entryOfPriority"/>
<label kind="synchronisation">entryChanOfOperating33?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Init"/>
<target ref="entryOfInit"/>
<label kind="synchronisation">entryChanOfOperating33?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="timer18"/>
<target ref="entryOfInit"/>
<label kind="synchronisation">entryChanOfOperating33?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="timer16"/>
<target ref="timer16"/>
<label kind="synchronisation">exitChanOfOperating40?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="SecondaryPrepares"/>
<target ref="SecondaryPrepares"/>
<label kind="synchronisation">exitChanOfOperating40?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="GenInitLocation1"/>
<target ref="GenInitLocation1"/>
<label kind="synchronisation">exitChanOfOperating40?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="timer22"/>
<target ref="timer22"/>
<label kind="synchronisation">exitChanOfOperating40?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="timer30"/>
<target ref="timer30"/>
<label kind="synchronisation">exitChanOfOperating40?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Secondary"/>
<target ref="Secondary"/>
<label kind="synchronisation">exitChanOfOperating40?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="PriorityPrepares"/>
<target ref="PriorityPrepares"/>
<label kind="synchronisation">exitChanOfOperating40?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Priority"/>
<target ref="Priority"/>
<label kind="synchronisation">exitChanOfOperating40?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="timer20"/>
<target ref="timer20"/>
<label kind="synchronisation">exitChanOfOperating40?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Init"/>
<target ref="Init"/>
<label kind="synchronisation">exitChanOfOperating40?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="timer18"/>
<target ref="timer18"/>
<label kind="synchronisation">exitChanOfOperating40?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
normalOfNormalOfprior
</name>
<declaration>
bool isActive;
</declaration>
<location id="EntryLocation3">
<name>
EntryLocation3
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="GenInitLocation4">
<name>
GenInitLocation4
</name>
<label kind="comments">
Generated for the synchronization of subregions.
</label>
</location>

<location id="Green">
<name>
Green
</name>
</location>

<location id="entryOfGreen">
<name>
entryOfGreen
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="Yellow">
<name>
Yellow
</name>
</location>

<location id="entryOfYellow">
<name>
entryOfYellow
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="Red">
<name>
Red
</name>
</location>

<location id="entryOfRed">
<name>
entryOfRed
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>
<init ref="GenInitLocation4"/>

<transition>
<source ref="entryOfGreen"/>
<target ref="Green"/>
<label kind="assignment">LightCommands_displayGreenOfprior = true</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfYellow"/>
<target ref="Yellow"/>
<label kind="assignment">LightCommands_displayYellowOfprior = true</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfRed"/>
<target ref="Red"/>
<label kind="assignment">LightCommands_displayRedOfprior = true</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="EntryLocation3"/>
<target ref="entryOfRed"/>
<label kind="guard">isActive</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Red"/>
<target ref="entryOfGreen"/>
<label kind="guard">(isActive &amp;&amp; isRaised_Control_toggleOfprior)</label>
<label kind="synchronisation">runCycleNormalOfNormalOfprior?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Green"/>
<target ref="entryOfYellow"/>
<label kind="guard">(isActive &amp;&amp; isRaised_Control_toggleOfprior)</label>
<label kind="synchronisation">runCycleNormalOfNormalOfprior?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Yellow"/>
<target ref="entryOfRed"/>
<label kind="guard">(isActive &amp;&amp; isRaised_Control_toggleOfprior)</label>
<label kind="synchronisation">runCycleNormalOfNormalOfprior?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Yellow"/>
<target ref="entryOfYellow"/>
<label kind="synchronisation">entryChanOfNormal35?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Green"/>
<target ref="entryOfGreen"/>
<label kind="synchronisation">entryChanOfNormal35?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Red"/>
<target ref="entryOfRed"/>
<label kind="synchronisation">entryChanOfNormal35?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="GenInitLocation4"/>
<target ref="EntryLocation3"/>
<label kind="synchronisation">entryChanOfNormal35?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Yellow"/>
<target ref="Yellow"/>
<label kind="synchronisation">exitChanOfNormal44?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Green"/>
<target ref="Green"/>
<label kind="synchronisation">exitChanOfNormal44?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Red"/>
<target ref="Red"/>
<label kind="synchronisation">exitChanOfNormal44?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="GenInitLocation4"/>
<target ref="GenInitLocation4"/>
<label kind="synchronisation">exitChanOfNormal44?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
main_regionOfStatechartOfprior
</name>
<declaration>
</declaration>
<location id="EntryLocation8">
<name>
EntryLocation8
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="Normal">
<name>
Normal
</name>
</location>

<location id="entryOfNormal">
<name>
entryOfNormal
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="Interrupted">
<name>
Interrupted
</name>
</location>

<location id="entryOfInterrupted">
<name>
entryOfInterrupted
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="exitOfInterrupted43">
<name>
exitOfInterrupted43
</name>
<label kind="comments">
Synchronization location.
</label>
<committed/>
</location>

<location id="exitOfNormal45">
<name>
exitOfNormal45
</name>
<label kind="comments">
Synchronization location.
</label>
<committed/>
</location>

<location id="FinalizeBeforeNormal49">
<name>
FinalizeBeforeNormal49
</name>
<urgent/>
</location>

<location id="FinalizeBeforeInterrupted50">
<name>
FinalizeBeforeInterrupted50
</name>
<urgent/>
</location>
<init ref="EntryLocation8"/>

<transition>
<source ref="entryOfNormal"/>
<target ref="Normal"/>
<label kind="synchronisation">entryChanOfNormal35!</label>
<label kind="assignment"></label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfInterrupted"/>
<target ref="Interrupted"/>
<label kind="synchronisation">entryChanOfInterrupted31!</label>
<label kind="assignment"></label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="Interrupted"/>
<target ref="exitOfInterrupted43"/>
<label kind="guard">isRaised_PoliceInterrupt_policeOfprior</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfprior?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Normal"/>
<target ref="exitOfNormal45"/>
<label kind="guard">isRaised_PoliceInterrupt_policeOfprior</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfprior?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="EntryLocation8"/>
<target ref="entryOfNormal"/>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="exitOfInterrupted43"/>
<target ref="FinalizeBeforeNormal49"/>
<label kind="synchronisation">exitChanOfInterrupted42!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="exitOfNormal45"/>
<target ref="FinalizeBeforeInterrupted50"/>
<label kind="synchronisation">exitChanOfNormal44!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="FinalizeBeforeNormal49"/>
<target ref="entryOfNormal"/>
<label kind="synchronisation">finalize?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="FinalizeBeforeInterrupted50"/>
<target ref="entryOfInterrupted"/>
<label kind="synchronisation">finalize?</label>
<label kind="assignment"></label>
</transition>
</template>

<template>
<name>
main_regionOfStatechartOfsecondary
</name>
<declaration>
</declaration>
<location id="EntryLocation5">
<name>
EntryLocation5
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="Interrupted">
<name>
Interrupted
</name>
</location>

<location id="entryOfInterrupted">
<name>
entryOfInterrupted
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="Normal">
<name>
Normal
</name>
</location>

<location id="entryOfNormal">
<name>
entryOfNormal
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="exitOfInterrupted37">
<name>
exitOfInterrupted37
</name>
<label kind="comments">
Synchronization location.
</label>
<committed/>
</location>

<location id="exitOfNormal39">
<name>
exitOfNormal39
</name>
<label kind="comments">
Synchronization location.
</label>
<committed/>
</location>

<location id="FinalizeBeforeNormal46">
<name>
FinalizeBeforeNormal46
</name>
<urgent/>
</location>

<location id="FinalizeBeforeInterrupted48">
<name>
FinalizeBeforeInterrupted48
</name>
<urgent/>
</location>
<init ref="EntryLocation5"/>

<transition>
<source ref="entryOfInterrupted"/>
<target ref="Interrupted"/>
<label kind="synchronisation">entryChanOfInterrupted34!</label>
<label kind="assignment"></label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfNormal"/>
<target ref="Normal"/>
<label kind="synchronisation">entryChanOfNormal32!</label>
<label kind="assignment"></label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="Interrupted"/>
<target ref="exitOfInterrupted37"/>
<label kind="guard">isRaised_PoliceInterrupt_policeOfsecondary</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfsecondary?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Normal"/>
<target ref="exitOfNormal39"/>
<label kind="guard">isRaised_PoliceInterrupt_policeOfsecondary</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfsecondary?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="EntryLocation5"/>
<target ref="entryOfNormal"/>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="exitOfInterrupted37"/>
<target ref="FinalizeBeforeNormal46"/>
<label kind="synchronisation">exitChanOfInterrupted36!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="exitOfNormal39"/>
<target ref="FinalizeBeforeInterrupted48"/>
<label kind="synchronisation">exitChanOfNormal38!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="FinalizeBeforeNormal46"/>
<target ref="entryOfNormal"/>
<label kind="synchronisation">finalize?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="FinalizeBeforeInterrupted48"/>
<target ref="entryOfInterrupted"/>
<label kind="synchronisation">finalize?</label>
<label kind="assignment"></label>
</transition>
</template>

<template>
<name>
interruptedOfInterruptedOfsecondary
</name>
<declaration>
bool isActive;

clock timer13;

clock timer27;
</declaration>
<location id="EntryLocation9">
<name>
EntryLocation9
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="GenInitLocation10">
<name>
GenInitLocation10
</name>
<label kind="comments">
Generated for the synchronization of subregions.
</label>
</location>

<location id="Black">
<name>
Black
</name>
<label kind="invariant">
timer13 &lt;= 500
</label>
</location>

<location id="entryOfBlack">
<name>
entryOfBlack
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="BlinkingYellow">
<name>
BlinkingYellow
</name>
<label kind="invariant">
timer27 &lt;= 500
</label>
</location>

<location id="entryOfBlinkingYellow">
<name>
entryOfBlinkingYellow
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="timer14">
<name>
timer14
</name>
</location>

<location id="timer28">
<name>
timer28
</name>
</location>
<init ref="GenInitLocation10"/>

<transition>
<source ref="entryOfBlack"/>
<target ref="Black"/>
<label kind="assignment">LightCommands_displayNoneOfsecondary = true,
timer13 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfBlinkingYellow"/>
<target ref="BlinkingYellow"/>
<label kind="assignment">LightCommands_displayYellowOfsecondary = true,
timer27 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="timer14"/>
<target ref="entryOfBlinkingYellow"/>
<label kind="guard">isActive</label>
<label kind="synchronisation">runCycleInterruptedOfInterruptedOfsecondary?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="EntryLocation9"/>
<target ref="entryOfBlinkingYellow"/>
<label kind="guard">isActive</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="timer28"/>
<target ref="entryOfBlack"/>
<label kind="guard">isActive</label>
<label kind="synchronisation">runCycleInterruptedOfInterruptedOfsecondary?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Black"/>
<target ref="timer14"/>
<label kind="guard">(isStable &amp;&amp; timer13 >= 500)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="BlinkingYellow"/>
<target ref="timer28"/>
<label kind="guard">(isStable &amp;&amp; timer27 >= 500)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="GenInitLocation10"/>
<target ref="EntryLocation9"/>
<label kind="synchronisation">entryChanOfInterrupted34?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Black"/>
<target ref="EntryLocation9"/>
<label kind="synchronisation">entryChanOfInterrupted34?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="BlinkingYellow"/>
<target ref="EntryLocation9"/>
<label kind="synchronisation">entryChanOfInterrupted34?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="timer14"/>
<target ref="EntryLocation9"/>
<label kind="synchronisation">entryChanOfInterrupted34?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="timer28"/>
<target ref="EntryLocation9"/>
<label kind="synchronisation">entryChanOfInterrupted34?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="GenInitLocation10"/>
<target ref="GenInitLocation10"/>
<label kind="synchronisation">exitChanOfInterrupted36?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Black"/>
<target ref="Black"/>
<label kind="synchronisation">exitChanOfInterrupted36?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="BlinkingYellow"/>
<target ref="BlinkingYellow"/>
<label kind="synchronisation">exitChanOfInterrupted36?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="timer14"/>
<target ref="timer14"/>
<label kind="synchronisation">exitChanOfInterrupted36?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="timer28"/>
<target ref="timer28"/>
<label kind="synchronisation">exitChanOfInterrupted36?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
normalOfNormalOfsecondary
</name>
<declaration>
bool isActive;
</declaration>
<location id="EntryLocation11">
<name>
EntryLocation11
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="GenInitLocation12">
<name>
GenInitLocation12
</name>
<label kind="comments">
Generated for the synchronization of subregions.
</label>
</location>

<location id="Yellow">
<name>
Yellow
</name>
</location>

<location id="entryOfYellow">
<name>
entryOfYellow
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="Green">
<name>
Green
</name>
</location>

<location id="entryOfGreen">
<name>
entryOfGreen
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="Red">
<name>
Red
</name>
</location>

<location id="entryOfRed">
<name>
entryOfRed
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>
<init ref="GenInitLocation12"/>

<transition>
<source ref="entryOfYellow"/>
<target ref="Yellow"/>
<label kind="assignment">LightCommands_displayYellowOfsecondary = true</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfGreen"/>
<target ref="Green"/>
<label kind="assignment">LightCommands_displayGreenOfsecondary = true</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfRed"/>
<target ref="Red"/>
<label kind="assignment">LightCommands_displayRedOfsecondary = true</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="Red"/>
<target ref="entryOfGreen"/>
<label kind="guard">(isActive &amp;&amp; isRaised_Control_toggleOfsecondary)</label>
<label kind="synchronisation">runCycleNormalOfNormalOfsecondary?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Yellow"/>
<target ref="entryOfRed"/>
<label kind="guard">(isActive &amp;&amp; isRaised_Control_toggleOfsecondary)</label>
<label kind="synchronisation">runCycleNormalOfNormalOfsecondary?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Green"/>
<target ref="entryOfYellow"/>
<label kind="guard">(isActive &amp;&amp; isRaised_Control_toggleOfsecondary)</label>
<label kind="synchronisation">runCycleNormalOfNormalOfsecondary?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="EntryLocation11"/>
<target ref="entryOfRed"/>
<label kind="guard">isActive</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Red"/>
<target ref="entryOfRed"/>
<label kind="synchronisation">entryChanOfNormal32?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Yellow"/>
<target ref="entryOfYellow"/>
<label kind="synchronisation">entryChanOfNormal32?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Green"/>
<target ref="entryOfGreen"/>
<label kind="synchronisation">entryChanOfNormal32?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="GenInitLocation12"/>
<target ref="EntryLocation11"/>
<label kind="synchronisation">entryChanOfNormal32?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Red"/>
<target ref="Red"/>
<label kind="synchronisation">exitChanOfNormal38?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Yellow"/>
<target ref="Yellow"/>
<label kind="synchronisation">exitChanOfNormal38?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Green"/>
<target ref="Green"/>
<label kind="synchronisation">exitChanOfNormal38?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="GenInitLocation12"/>
<target ref="GenInitLocation12"/>
<label kind="synchronisation">exitChanOfNormal38?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
main_regionOfStatechartOfcontroller
</name>
<declaration>
</declaration>
<location id="EntryLocation2">
<name>
EntryLocation2
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="Interrupted">
<name>
Interrupted
</name>
</location>

<location id="Operating">
<name>
Operating
</name>
</location>

<location id="entryOfOperating">
<name>
entryOfOperating
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="exitOfOperating41">
<name>
exitOfOperating41
</name>
<label kind="comments">
Synchronization location.
</label>
<committed/>
</location>

<location id="FinalizeBeforeOperating47">
<name>
FinalizeBeforeOperating47
</name>
<urgent/>
</location>
<init ref="EntryLocation2"/>

<transition>
<source ref="entryOfOperating"/>
<target ref="Operating"/>
<label kind="synchronisation">entryChanOfOperating33!</label>
<label kind="assignment"></label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="Operating"/>
<target ref="exitOfOperating41"/>
<label kind="guard">isRaised_PoliceInterrupt_policeOfcontroller</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfcontroller?</label>
<label kind="assignment">toRaise_PoliceInterrupt_policeOfsecondary = true,
toRaise_PoliceInterrupt_policeOfprior = true</label>
</transition>

<transition>
<source ref="EntryLocation2"/>
<target ref="entryOfOperating"/>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Interrupted"/>
<target ref="FinalizeBeforeOperating47"/>
<label kind="guard">isRaised_PoliceInterrupt_policeOfcontroller</label>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfcontroller?</label>
<label kind="assignment">toRaise_PoliceInterrupt_policeOfprior = true,
toRaise_PoliceInterrupt_policeOfsecondary = true</label>
</transition>

<transition>
<source ref="exitOfOperating41"/>
<target ref="Interrupted"/>
<label kind="synchronisation">exitChanOfOperating40!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="FinalizeBeforeOperating47"/>
<target ref="entryOfOperating"/>
<label kind="synchronisation">finalize?</label>
<label kind="assignment"></label>
</transition>
</template>

<template>
<name>
interruptedOfInterruptedOfprior
</name>
<declaration>
bool isActive;

clock timer23;

clock timer25;
</declaration>
<location id="EntryLocation6">
<name>
EntryLocation6
</name>
<label kind="comments">
Entry Location
</label>
<committed/>
</location>

<location id="GenInitLocation7">
<name>
GenInitLocation7
</name>
<label kind="comments">
Generated for the synchronization of subregions.
</label>
</location>

<location id="BlinkingYellow">
<name>
BlinkingYellow
</name>
<label kind="invariant">
timer25 &lt;= 500
</label>
</location>

<location id="entryOfBlinkingYellow">
<name>
entryOfBlinkingYellow
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="Black">
<name>
Black
</name>
<label kind="invariant">
timer23 &lt;= 500
</label>
</location>

<location id="entryOfBlack">
<name>
entryOfBlack
</name>
<label kind="comments">
Pseudo state for subregion synchronization
</label>
<committed/>
</location>

<location id="timer24">
<name>
timer24
</name>
</location>

<location id="timer26">
<name>
timer26
</name>
</location>
<init ref="GenInitLocation7"/>

<transition>
<source ref="entryOfBlinkingYellow"/>
<target ref="BlinkingYellow"/>
<label kind="assignment">LightCommands_displayYellowOfprior = true,
timer25 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="entryOfBlack"/>
<target ref="Black"/>
<label kind="assignment">LightCommands_displayNoneOfprior = true,
timer23 = 0</label>
<label kind="comments">Edge for subregion synchronization</label>
</transition>

<transition>
<source ref="EntryLocation6"/>
<target ref="entryOfBlinkingYellow"/>
<label kind="guard">isActive</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="timer24"/>
<target ref="entryOfBlinkingYellow"/>
<label kind="guard">isActive</label>
<label kind="synchronisation">runCycleInterruptedOfInterruptedOfprior?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="timer26"/>
<target ref="entryOfBlack"/>
<label kind="guard">isActive</label>
<label kind="synchronisation">runCycleInterruptedOfInterruptedOfprior?</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="Black"/>
<target ref="timer24"/>
<label kind="guard">(isStable &amp;&amp; timer23 >= 500)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="BlinkingYellow"/>
<target ref="timer26"/>
<label kind="guard">(isStable &amp;&amp; timer25 >= 500)</label>
<label kind="assignment"></label>
</transition>

<transition>
<source ref="timer24"/>
<target ref="EntryLocation6"/>
<label kind="synchronisation">entryChanOfInterrupted31?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="Black"/>
<target ref="EntryLocation6"/>
<label kind="synchronisation">entryChanOfInterrupted31?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="BlinkingYellow"/>
<target ref="EntryLocation6"/>
<label kind="synchronisation">entryChanOfInterrupted31?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="timer26"/>
<target ref="EntryLocation6"/>
<label kind="synchronisation">entryChanOfInterrupted31?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="GenInitLocation7"/>
<target ref="EntryLocation6"/>
<label kind="synchronisation">entryChanOfInterrupted31?</label>
<label kind="assignment">isActive = true</label>
</transition>

<transition>
<source ref="timer24"/>
<target ref="timer24"/>
<label kind="synchronisation">exitChanOfInterrupted42?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="Black"/>
<target ref="Black"/>
<label kind="synchronisation">exitChanOfInterrupted42?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="BlinkingYellow"/>
<target ref="BlinkingYellow"/>
<label kind="synchronisation">exitChanOfInterrupted42?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="timer26"/>
<target ref="timer26"/>
<label kind="synchronisation">exitChanOfInterrupted42?</label>
<label kind="assignment">isActive = false</label>
</transition>

<transition>
<source ref="GenInitLocation7"/>
<target ref="GenInitLocation7"/>
<label kind="synchronisation">exitChanOfInterrupted42?</label>
<label kind="assignment">isActive = false</label>
</transition>
</template>

<template>
<name>
CrossroadOrchestrator51
</name>
<declaration>
clock orchestratorTimer65;
</declaration>
<location id="InitLoc">
<name>
InitLoc
</name>
<label kind="invariant">
orchestratorTimer65 &lt;= 2000
</label>
</location>

<location id="swapLocation52">
<name>
swapLocation52
</name>
<urgent/>
</location>

<location id="RunMain_regionOfStatechartOfcontroller53">
<name>
RunMain_regionOfStatechartOfcontroller53
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="RunOperatingOfOperatingOfcontroller54">
<name>
RunOperatingOfOperatingOfcontroller54
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="finalizecontroller55">
<name>
finalizecontroller55
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="RunMain_regionOfStatechartOfprior56">
<name>
RunMain_regionOfStatechartOfprior56
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="RunNormalOfNormalOfprior57">
<name>
RunNormalOfNormalOfprior57
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="RunInterruptedOfInterruptedOfprior58">
<name>
RunInterruptedOfInterruptedOfprior58
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="finalizeprior59">
<name>
finalizeprior59
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="RunMain_regionOfStatechartOfsecondary60">
<name>
RunMain_regionOfStatechartOfsecondary60
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="RunNormalOfNormalOfsecondary61">
<name>
RunNormalOfNormalOfsecondary61
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="RunInterruptedOfInterruptedOfsecondary62">
<name>
RunInterruptedOfInterruptedOfsecondary62
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="finalizesecondary63">
<name>
finalizesecondary63
</name>
<label kind="comments">
Synchronization location.
</label>
<urgent/>
</location>

<location id="final">
<name>
final
</name>
<label kind="comments">
To ensure all synchronizations to take place before an isStable state.
</label>
<urgent/>
</location>
<init ref="InitLoc"/>

<transition>
<source ref="InitLoc"/>
<target ref="swapLocation52"/>
<label kind="assignment">clearOutEvents64(),
isStable = false</label>
</transition>

<transition>
<source ref="swapLocation52"/>
<target ref="RunMain_regionOfStatechartOfcontroller53"/>
<label kind="assignment">isRaised_PoliceInterrupt_policeOfprior = toRaise_PoliceInterrupt_policeOfprior,
toRaise_PoliceInterrupt_policeOfprior = false,
isRaised_Control_toggleOfprior = toRaise_Control_toggleOfprior,
toRaise_Control_toggleOfprior = false,
isRaised_PoliceInterrupt_policeOfsecondary = toRaise_PoliceInterrupt_policeOfsecondary,
toRaise_PoliceInterrupt_policeOfsecondary = false,
isRaised_Control_toggleOfsecondary = toRaise_Control_toggleOfsecondary,
toRaise_Control_toggleOfsecondary = false,
isRaised_PoliceInterrupt_policeOfcontroller = toRaise_PoliceInterrupt_policeOfcontroller,
toRaise_PoliceInterrupt_policeOfcontroller = false</label>
</transition>

<transition>
<source ref="RunMain_regionOfStatechartOfcontroller53"/>
<target ref="RunOperatingOfOperatingOfcontroller54"/>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfcontroller!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunOperatingOfOperatingOfcontroller54"/>
<target ref="finalizecontroller55"/>
<label kind="synchronisation">runCycleOperatingOfOperatingOfcontroller!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="finalizecontroller55"/>
<target ref="RunMain_regionOfStatechartOfprior56"/>
<label kind="synchronisation">finalize!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunMain_regionOfStatechartOfprior56"/>
<target ref="RunNormalOfNormalOfprior57"/>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfprior!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunNormalOfNormalOfprior57"/>
<target ref="RunInterruptedOfInterruptedOfprior58"/>
<label kind="synchronisation">runCycleNormalOfNormalOfprior!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunInterruptedOfInterruptedOfprior58"/>
<target ref="finalizeprior59"/>
<label kind="synchronisation">runCycleInterruptedOfInterruptedOfprior!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="finalizeprior59"/>
<target ref="RunMain_regionOfStatechartOfsecondary60"/>
<label kind="synchronisation">finalize!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunMain_regionOfStatechartOfsecondary60"/>
<target ref="RunNormalOfNormalOfsecondary61"/>
<label kind="synchronisation">runCycleMain_regionOfStatechartOfsecondary!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunNormalOfNormalOfsecondary61"/>
<target ref="RunInterruptedOfInterruptedOfsecondary62"/>
<label kind="synchronisation">runCycleNormalOfNormalOfsecondary!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="RunInterruptedOfInterruptedOfsecondary62"/>
<target ref="finalizesecondary63"/>
<label kind="synchronisation">runCycleInterruptedOfInterruptedOfsecondary!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="finalizesecondary63"/>
<target ref="final"/>
<label kind="synchronisation">finalize!</label>
<label kind="assignment"></label>
<label kind="comments">Synchronization edge.</label>
</transition>

<transition>
<source ref="final"/>
<target ref="InitLoc"/>
<label kind="assignment">isStable = true,
orchestratorTimer65 = 0</label>
</transition>
</template>

<template>
<name>
Environment
</name>
<declaration>
</declaration>
<location id="InitLoc">
<name>
InitLoc
</name>
</location>
<init ref="InitLoc"/>

<transition>
<source ref="InitLoc"/>
<target ref="InitLoc"/>
<label kind="guard">(isStable &amp;&amp; !(toRaise_PoliceInterrupt_policeOfcontroller))</label>
<label kind="assignment">toRaise_PoliceInterrupt_policeOfcontroller = true</label>
</transition>
</template>
<system>
	P_operatingOfOperatingOfcontroller = operatingOfOperatingOfcontroller();
	
	P_normalOfNormalOfprior = normalOfNormalOfprior();
	
	P_main_regionOfStatechartOfprior = main_regionOfStatechartOfprior();
	
	P_main_regionOfStatechartOfsecondary = main_regionOfStatechartOfsecondary();
	
	P_interruptedOfInterruptedOfsecondary = interruptedOfInterruptedOfsecondary();
	
	P_normalOfNormalOfsecondary = normalOfNormalOfsecondary();
	
	P_main_regionOfStatechartOfcontroller = main_regionOfStatechartOfcontroller();
	
	P_interruptedOfInterruptedOfprior = interruptedOfInterruptedOfprior();
	
	P_CrossroadOrchestrator51 = CrossroadOrchestrator51();
	
	P_Environment = Environment();
	system P_operatingOfOperatingOfcontroller, P_normalOfNormalOfprior, P_main_regionOfStatechartOfprior, P_main_regionOfStatechartOfsecondary, P_interruptedOfInterruptedOfsecondary, P_normalOfNormalOfsecondary, P_main_regionOfStatechartOfcontroller, P_interruptedOfInterruptedOfprior, P_CrossroadOrchestrator51, P_Environment;
</system>
	</nta>
